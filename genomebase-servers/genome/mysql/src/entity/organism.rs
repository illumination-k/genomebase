//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "organism")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub taxonomy_id: String,
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::genome_sequence::Entity")]
    GenomeSequence,
    #[sea_orm(has_many = "super::genome_version::Entity")]
    GenomeVersion,
}

impl Related<super::genome_sequence::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GenomeSequence.def()
    }
}

impl Related<super::genome_version::Entity> for Entity {
    fn to() -> RelationDef {
        super::annotation_model_version::Relation::GenomeVersion.def()
    }
    fn via() -> Option<RelationDef> {
        Some(
            super::annotation_model_version::Relation::Organism
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
