//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "genomes")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Vec<u8>,
    pub genome_version: String,
    pub organism_taxonomy_id: u32,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::annotation_models::Entity")]
    AnnotationModels,
    #[sea_orm(has_many = "super::gene_models::Entity")]
    GeneModels,
    #[sea_orm(
        belongs_to = "super::organisms::Entity",
        from = "Column::OrganismTaxonomyId",
        to = "super::organisms::Column::TaxonomyId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Organisms,
}

impl Related<super::annotation_models::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AnnotationModels.def()
    }
}

impl Related<super::gene_models::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GeneModels.def()
    }
}

impl Related<super::organisms::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Organisms.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
