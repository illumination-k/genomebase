//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "genome_sequence")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub taxonomy_id: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub version: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub seq_name: String,
    #[sea_orm(column_type = "Text")]
    pub sequence: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::genome_version::Entity",
        from = "Column::TaxonomyId",
        to = "super::genome_version::Column::Version",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    GenomeVersion,
    #[sea_orm(
        belongs_to = "super::organism::Entity",
        from = "Column::TaxonomyId",
        to = "super::organism::Column::TaxonomyId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Organism,
}

impl Related<super::genome_version::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GenomeVersion.def()
    }
}

impl Related<super::organism::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Organism.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
